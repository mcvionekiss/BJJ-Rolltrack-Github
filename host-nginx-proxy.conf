# Configuration for host Nginx to proxy to Docker containers
# Place this file in /etc/nginx/sites-available/
# Then create a symlink to /etc/nginx/sites-enabled/

# HTTP server - redirects to HTTPS
server {
    listen 80;
    server_name staging.rolltrackapp.com;

    # Let's Encrypt validation files
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    server_name staging.rolltrackapp.com;

    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/staging.rolltrackapp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/staging.rolltrackapp.com/privkey.pem;

    # SSL parameters
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Proxy settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # API requests - proxy to backend
    location /api/ {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Auth endpoints
    location /auth/ {
        proxy_pass http://localhost:8000/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Admin endpoints
    location /admin/ {
        proxy_pass http://localhost:8000/admin/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Static files (CSS, JS, images)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enable caching of static assets
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }
    
    # Root location with better SPA support
    location / {
        # Define path for both direct and SPA routing
        set $path_info $uri;
        
        # If this path doesn't exist in the container, use index.html instead (for SPA routes)
        # First check if the request itself returns a 404
        proxy_intercept_errors on;
        error_page 404 = @spa_fallback;
        
        # Forward requests to frontend container
        proxy_pass http://localhost:3000;
        
        # Additional proxy settings for WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Increase timeouts for long connections
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # Special location for handling SPA routes
    location @spa_fallback {
        # Always serve index.html for any route that doesn't exist
        # This properly handles React Router paths
        rewrite ^ /index.html break;
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}