# Define upstream for backend servers (for load balancing)
upstream backend_servers {
    server backend:8000;
    # Additional backend servers can be added here for horizontal scaling
    # server backend2:8000;
    # server backend3:8000;
}

# HTTP server
server {
    listen 80;
    server_name rolltrackapp.com www.rolltrackapp.com;  # Replace with your domain

    # For Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all traffic to HTTPS when certificates are available
    location / {
        # Use a more reliable approach to check for HTTPS availability
        # instead of environment variables
        if (-f /etc/nginx/ssl/cert.pem) {
            return 301 https://$host$request_uri;
        }
        
        # If HTTPS is not available, proxy to frontend
        proxy_pass http://bjj-rolltrack-github_frontend_1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Proxy API requests to the backend
    location /api/ {
        proxy_pass http://bjj-rolltrack-github_backend_1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Serve static files directly
    location /static/ {
        alias /usr/share/nginx/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Serve media files directly
    location /media/ {
        alias /usr/share/nginx/media/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
}

# HTTPS server - This will silently fail if cert files don't exist,
# which is better than causing the whole Nginx to fail
server {
    listen 443 ssl http2;
    server_name rolltrackapp.com www.rolltrackapp.com;  # Replace with your domain

    # SSL configuration - Will fail silently if files don't exist
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # HSTS (optional, but recommended)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Proxy to frontend
    location / {
        proxy_pass http://bjj-rolltrack-github_frontend_1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Proxy API requests to the backend
    location /api/ {
        proxy_pass http://bjj-rolltrack-github_backend_1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Serve static files directly
    location /static/ {
        alias /usr/share/nginx/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Serve media files directly
    location /media/ {
        alias /usr/share/nginx/media/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
}