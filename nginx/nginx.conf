# Configuration for Nginx - Server Blocks Only
# Note: Global directives like worker_processes, error_log, pid, events, and http
# should only be in the main nginx.conf file, not in conf.d/*.conf files

# Define upstream for backend servers (for load balancing)
upstream backend_servers {
    server backend:8000;
    # Additional backend servers can be added here for horizontal scaling
    # server backend2:8000;
    # server backend3:8000;
}

    # HTTP server (redirects to HTTPS if enabled)
    server {
        listen 80;
        server_name ${DOMAIN_NAME};

        # For Let's Encrypt verification
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect to HTTPS if enabled
        location / {
            if ($USE_HTTPS = "True") {
                return 301 https://$host$request_uri;
            }
            
            # If HTTPS is not enabled, proxy to frontend
            proxy_pass ${FRONTEND_URL};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy API requests to the backend
        location /api/ {
            proxy_pass ${BACKEND_URL};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Serve static files directly
        location /static/ {
            alias /usr/share/nginx/static/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # Serve media files directly
        location /media/ {
            alias /usr/share/nginx/media/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
    }

    # HTTPS server (only included if USE_HTTPS is True)
    server {
        listen 443 ssl http2;
        server_name ${DOMAIN_NAME};

        # Only include this server block if USE_HTTPS is True
        if ($USE_HTTPS != "True") {
            return 404;
        }

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS (optional, but recommended)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Proxy to frontend
        location / {
            proxy_pass ${FRONTEND_URL};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy API requests to the backend
        location /api/ {
            proxy_pass ${BACKEND_URL};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Serve static files directly
        location /static/ {
            alias /usr/share/nginx/static/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # Serve media files directly
        location /media/ {
            alias /usr/share/nginx/media/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
    }